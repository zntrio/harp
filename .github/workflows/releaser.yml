name: Release

on:
  workflow_dispatch:
    inputs:
      release:
        description: 'Release version'
        required: true

permissions:  # added using https://github.com/step-security/secure-repo
  contents: read

jobs:
  release:
    runs-on: macos-latest
    permissions:
      packages: read
      contents: write
      actions: write

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@8ca2b8b2ece13480cda6dacd3511b49857a23c09 # v2.5.1
        with:
          egress-policy: audit

      -
        name: Cancel previous workflows
        uses: styfle/cancel-workflow-action@b173b6ec0100793626c2d9e6b90435061f4fc3e5 # 0.11.0
        with:
          access_token: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Checkout
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0
      -
        name: Unshallow
        run: git fetch --prune --unshallow
      -
        name: Set up Go
        uses: actions/setup-go@93397bea11091df50f3d7e59dc26a7711a8bcfbe # v4.1.0
        with:
          go-version: '1.21'
          check-latest: true
      -
        name: Cache Go modules
        uses: actions/cache@704facf57e6136b1bc63b828d79edcd491f0ee84 # v3.3.2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      -
        name: Download cyclonedx-gomod
        uses: Zenithar/gh-gomod-generate-sbom@2cdc82f8e362b12fdec116b716ce0130baec8be2 # v1.0.3
        with:
          version: v1.2.0
          github-token: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Install Cosign
        uses: sigstore/cosign-installer@11086d25041f77fe8fe7b9ea4e48e3b9192b8f19 # v3.1.2
      -
        name: Import Code-Signing Certificates
        uses: Apple-Actions/import-codesign-certs@8f3fb608891dd2244cdab3d69cd68c0d37a7fe93 # v2
        with:
          p12-file-base64: ${{ secrets.APPLE_DEVELOPER_CERTIFICATE_P12_BASE64 }}
          p12-password: ${{ secrets.APPLE_DEVELOPER_CERTIFICATE_PASSWORD }}
      -
        name: Install gon via HomeBrew for code signing and app notarization
        run: |
          brew tap mitchellh/gon
          brew install mitchellh/gon/gon
          brew install coreutils
      -
        name: Run GoReleaser
        uses: goreleaser/goreleaser-action@7ec5c2b0c6cdda6e8bbb49444bc797dd33d74dd8 # v5.0.0
        with:
          version: latest
          args: release --clean --skip-publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Prepare Github release packages
        run: |
          #!/bin/bash
          shopt -s expand_aliases
          mkdir .dist
          cp dist/harp-* .dist/
      -
        name: Sign and notarize MacOS CLIs
        env:
          AC_USERNAME: "${{ secrets.AC_USERNAME }}"
          AC_PASSWORD: "${{ secrets.AC_PASSWORD }}"
        run: |
          echo '{
            "source": [
              "./dist/harp-darwin-amd64",
              "./dist/harp-darwin-arm64"
            ],
            "bundle_id":"io.harpsec.cli",
            "apple_id": {},
            "sign": { "application_identity": "AA99310C5F2AE5E79F93A92993930904F95B59FC" },
            "zip": {
              "output_path": "./dist/harp-darwin.zip"
            }
          }' | jq '' > gon.json
          gon -log-level=debug -log-json ./gon.json
          rm -f .dist/harp-darwin-amd64 .dist/harp-darwin-arm64
      -
        name: Prepare archives
        run: |
          #!/bin/bash
          shopt -s expand_aliases
          cd .dist/
          unzip ../dist/harp-darwin.zip
          FILES="*"
          for f in $FILES;
          do
            case $f in
            *.sbom.json)
                continue
                ;;
            harp-*)
                fn=$(basename -s ".exe" $f)
                tar czf ${fn}.tar.gz $f ${fn}.sbom.json
                rm -f $f ${fn}.sbom.json
                ;;
            esac
          done
      -
        name: Sign
        shell: bash
        run: |
          #!/bin/bash
          shopt -s expand_aliases
          cd .dist
          sha256sum * > checksums.txt
          FILES="*"
          for f in $FILES;
          do
            case $f in
            provenance.json|checksums.txt)
                cosign sign-blob --key <(echo -n "${COSIGN_KEY}") "$f" > "$f.sig"
                ;;
            *.tar.gz)
                sha256sum "$f" | cut -d " " -f 1 > "$f.sha256"
                cosign sign-blob --key <(echo -n "${COSIGN_KEY}") "$f" > "$f.sig"
                ;;
            esac
          done
        env:
          COSIGN_KEY: ${{ secrets.COSIGN_KEY }}
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
      -
        name: Verify
        shell: bash
        run: |
          #!/bin/bash
          shopt -s expand_aliases
          curl -sLO https://raw.githubusercontent.com/zntrio/harp/v${{ github.event.inputs.release }}/build/artifact/cosign.pub
          cd .dist
          FILES="*"
          for f in $FILES;
          do
            if [[ -f "$f.sig" ]];
            then
              cosign verify-blob --key ../cosign.pub --signature "$f.sig" $f
            fi
          done
      -
        name: Upload to release
        uses: AButler/upload-release-assets@ec6d3263266dc57eb6645b5f75e827987f7c217d # v2.0
        with:
          files: '.dist/*'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          release-tag: v${{ github.event.inputs.release }}
